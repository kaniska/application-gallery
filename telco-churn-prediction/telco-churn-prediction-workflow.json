{
  "name": "Telco Churn Data Analysis",
  "category": "Machine Learning",
  "description": "churn analysis",
  "nodes": [
    {
      "id": "2",
      "name": "StringIndexer",
      "description": "StringIndexer encodes a string column of labels to a column of label indices",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeStringIndexer",
      "x": "247.961px",
      "y": "34.6094px",
      "fields": [
        {
          "name": "handleInvalid",
          "value": "skip",
          "widget": "array",
          "title": "Handle Invalid",
          "description": "Invalid entries to be skipped or thrown error",
          "optionsArray": [
            "skip",
            "error"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "inputCols",
          "value": "[\"state\",\"account_length\",\"area_code\",\"phone_number\",\"intl_plan\",\"voice_mail_plan\",\"number_vmail_messages\",\"total_day_minutes\",\"total_day_calls\",\"total_day_charge\",\"total_eve_minutes\",\"total_eve_calls\",\"total_eve_charge\",\"total_night_minutes\",\"total_night_calls\",\"total_night_charge\",\"total_intl_minutes\",\"total_intl_calls\",\"total_intl_charge\",\"number_customer_service_calls\",\"churned\"]",
          "widget": "variables_map",
          "title": "Input Columns",
          "description": "Column containing labels",
          "required": false,
          "display": false
        },
        {
          "name": "outputCols",
          "value": "[\"\",\"\",\"\",\"\",\"intl_plan_index\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"label\"]",
          "widget": "variables_map_edit",
          "title": "Output Columns",
          "description": "Output  columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "3",
      "name": "VectorAssembler",
      "description": "Merges multiple columns into a vector column",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeVectorAssembler",
      "x": "400.219px",
      "y": "202.852px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"account_length\",\"number_vmail_messages\",\"total_day_calls\",\"total_day_charge\",\"total_eve_calls\",\"total_eve_charge\",\"total_night_calls\",\"total_intl_calls\",\"total_intl_charge\",\"intl_plan_index\"]",
          "widget": "variables",
          "title": "Input Columns",
          "description": "Input column of type - all numeric, boolean and vector",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "vectorudt"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "outputCol",
          "value": "features_vector",
          "widget": "textfield",
          "title": "Output Column",
          "description": "Output column name",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "5",
      "name": "Split",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeSplit",
      "x": "704.676px",
      "y": "157.344px",
      "fields": [
        {
          "name": "fraction1",
          "value": ".8",
          "widget": "textfield",
          "title": "Fraction 1",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "6",
      "name": "RandomForestClassifier",
      "description": "It supports both binary and multiclass labels, as well as both continuous and categorical features.",
      "type": "ml-estimator",
      "nodeClass": "fire.nodes.ml.NodeRandomForestClassifier",
      "x": "915.953px",
      "y": "33.582px",
      "fields": [
        {
          "name": "featuresCol",
          "value": "features_vector",
          "widget": "variable",
          "title": "Features Column",
          "description": "Features column of type vectorUDT for model fitting",
          "datatypes": [
            "vectorudt"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "labelCol",
          "value": "label",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "predictionCol",
          "value": "",
          "widget": "textfield",
          "title": "Prediction Columns",
          "description": "The prediction column created during model scoring.",
          "required": false,
          "display": false
        },
        {
          "name": "probabilityCol",
          "value": "",
          "widget": "textfield",
          "title": "Probability Column",
          "description": "The column name for predicted class conditional probabilities",
          "required": false,
          "display": false
        },
        {
          "name": "rawPredictionCol",
          "value": "",
          "widget": "textfield",
          "title": "Raw Prediction Column",
          "description": "The raw prediction (a.k.a. confidence) column name",
          "required": false,
          "display": false
        },
        {
          "name": "featureSubsetStrategy",
          "value": "auto",
          "widget": "array",
          "title": "Feature Subset Strategy",
          "description": "The number of features to consider for splits at each tree node.",
          "optionsArray": [
            "auto",
            "onethird",
            "sqrt",
            "log2"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "impurity",
          "value": "gini",
          "widget": "array",
          "title": "Impurity",
          "description": "The Criterion used for information gain calculation",
          "optionsArray": [
            "gini",
            "entropy"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "maxBins",
          "value": "32",
          "widget": "textfield",
          "title": "Max Bins",
          "description": "The maximum number of bins used for discretizing continuous features.Must be >= 2 and >= number of categories in any categorical feature.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "maxDepth",
          "value": "5",
          "widget": "textfield",
          "title": "Max Depth",
          "description": "The Maximum depth of a tree",
          "datatypes": [
            "int"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "minInfoGain",
          "value": "0.0",
          "widget": "textfield",
          "title": "Min Information Gain",
          "description": "The Minimum information gain for a split to be considered at a tree node",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "minInstancesPerNode",
          "value": "1",
          "widget": "textfield",
          "title": "Min Instances Per Node",
          "description": "The Minimum number of instances each child must have after split",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "numTrees",
          "value": "20",
          "widget": "textfield",
          "title": "Num Tress",
          "description": "The number of trees to train",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "subsamplingRate",
          "value": "1.0",
          "widget": "textfield",
          "title": "Subsampling Rate",
          "description": "The fraction of the training data used for learning each decision tree.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "seed",
          "value": "",
          "widget": "textfield",
          "title": "Seed",
          "description": "The random seed",
          "datatypes": [
            "long"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "cacheNodeIds",
          "value": "false",
          "widget": "array",
          "title": "Cache Node Ids",
          "description": "The caching nodes IDs. Can speed up training of deeper trees.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "checkpointInterval",
          "value": "10",
          "widget": "textfield",
          "title": "Checkpoint Interval",
          "description": "The checkpoint interval. E.g. 10 means that the cache will get checkpointed every 10 iterations.Set checkpoint interval (>= 1) or disable checkpoint (-1)",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "maxMemoryInMB",
          "value": "256",
          "widget": "textfield",
          "title": "Max memory",
          "description": "Maximum memory in MB allocated to histogram aggregation.",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "gridSearch",
          "value": "",
          "widget": "tab",
          "title": "Grid Search",
          "required": false,
          "display": false
        },
        {
          "name": "minInfoGainGrid",
          "value": "",
          "widget": "textfield",
          "title": "Min Information Gain Param Grid Search",
          "description": "Min Information Gain Parameters for Grid Search",
          "required": false,
          "display": false
        },
        {
          "name": "maxBinsGrid",
          "value": "",
          "widget": "textfield",
          "title": "Max Bins Param Grid Search",
          "description": "Max Bins Parameters for Grid Search",
          "required": false,
          "display": false
        },
        {
          "name": "maxDepthGrid",
          "value": "",
          "widget": "textfield",
          "title": "Max Depth Param Grid Search",
          "description": "Max Depth Parameters for Grid Search",
          "required": false,
          "display": false
        },
        {
          "name": "numTreesGrid",
          "value": "",
          "widget": "textfield",
          "title": "Number trees Param Grid Search",
          "description": "Total number of trees Parameters for Grid Search",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "9",
      "name": "Predict",
      "type": "ml-predict",
      "nodeClass": "fire.nodes.ml.NodePredict",
      "x": "953.492px",
      "y": "249.109px",
      "fields": []
    },
    {
      "id": "10",
      "name": "BinaryClassificationEvaluator",
      "description": "Evaluator for binary classification, which expects two input columns: rawPrediction and label.",
      "type": "ml-evaluator",
      "nodeClass": "fire.nodes.ml.NodeBinaryClassificationEvaluator",
      "x": "885.469px",
      "y": "460.121px",
      "fields": [
        {
          "name": "labelCol",
          "value": "label",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "rawPredictionCol",
          "widget": "variable",
          "title": "RawPrediction Column",
          "description": "The raw prediction (confidence) column.",
          "required": false,
          "display": false
        },
        {
          "name": "metricName",
          "value": "areaUnderROC",
          "widget": "array",
          "title": "Metric Name",
          "description": "The metric used in evaluation.",
          "optionsArray": [
            "areaUnderROC",
            "areaUnderPR",
            "gini"
          ],
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "11",
      "name": "Summary",
      "description": "Summary statistics provide useful information about sample data. eg: measures of spread.",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeSummary",
      "x": "-0.515625px",
      "y": "408.129px",
      "fields": [
        {
          "name": "colNames",
          "value": "[\"account_length\",\"area_code\",\"number_vmail_messages\",\"total_day_minutes\",\"total_day_calls\",\"total_day_charge\",\"total_eve_minutes\",\"total_eve_calls\",\"total_eve_charge\",\"total_night_minutes\",\"total_night_calls\",\"total_night_charge\",\"total_intl_minutes\",\"total_intl_calls\",\"total_intl_charge\",\"number_customer_service_calls\"]",
          "widget": "variables",
          "title": "Column Names",
          "description": "Column Names for Summary",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float"
          ],
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "12",
      "name": "ReadCSV",
      "description": "Dataset Node for reading CSV files",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetCSV",
      "x": "137.215px",
      "y": "200.883px",
      "fields": [
        {
          "name": "path",
          "value": "data/churn_prediction/churn.all",
          "widget": "textfield",
          "title": "Path",
          "description": "Path of the Text file/directory",
          "required": false,
          "display": false
        },
        {
          "name": "separator",
          "value": ",",
          "widget": "textfield",
          "title": "Separator",
          "description": "CSV Separator",
          "required": false,
          "display": false
        },
        {
          "name": "header",
          "value": "false",
          "widget": "array",
          "title": "Header",
          "description": "Does the file have a header row",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "outputColNames",
          "value": "[\"state\",\"account_length\",\"area_code\",\"phone_number\",\"intl_plan\",\"voice_mail_plan\",\"number_vmail_messages\",\"total_day_minutes\",\"total_day_calls\",\"total_day_charge\",\"total_eve_minutes\",\"total_eve_calls\",\"total_eve_charge\",\"total_night_minutes\",\"total_night_calls\",\"total_night_charge\",\"total_intl_minutes\",\"total_intl_calls\",\"total_intl_charge\",\"number_customer_service_calls\",\"churned\"]",
          "widget": "schema_col_names",
          "title": "Column Names for the CSV",
          "description": "New Output Columns of the SQL",
          "required": false,
          "display": false
        },
        {
          "name": "outputColTypes",
          "value": "[\"STRING\",\"DOUBLE\",\"DOUBLE\",\"STRING\",\"STRING\",\"STRING\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"STRING\"]",
          "widget": "schema_col_types",
          "title": "Column Types for the CSV",
          "description": "Data Type of the Output Columns",
          "required": false,
          "display": false
        },
        {
          "name": "outputColFormats",
          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",
          "widget": "schema_col_formats",
          "title": "Column Formats for the CSV",
          "description": "Format of the Output Columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "13",
      "name": "Correlation",
      "description": "calculates the correlation between two series of data.",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeCorrelation",
      "x": "239.234px",
      "y": "423.875px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"account_length\",\"area_code\",\"number_vmail_messages\",\"total_day_minutes\",\"total_day_calls\",\"total_day_charge\",\"total_eve_minutes\",\"total_eve_calls\",\"total_eve_charge\",\"total_night_minutes\",\"total_night_calls\",\"total_night_charge\",\"total_intl_minutes\",\"total_intl_calls\",\"total_intl_charge\",\"number_customer_service_calls\"]",
          "widget": "variables",
          "title": "Input Column for Correlation",
          "description": "Column Names to check correlation ",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float"
          ],
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "14",
      "name": "Documentation",
      "description": "Allows documentation of the workflows",
      "type": "doc",
      "nodeClass": "fire.nodes.doc.NodeDocLarge",
      "x": "354px",
      "y": "605.656px",
      "fields": [
        {
          "name": "comment",
          "value": "<h1>Predict Telco Churn</h1><p><br/></p><p style=\"font-size: 14px;\">It demonstrate the creating ML workflow to  analyze &amp; preprocess a dataset, train a Machine Learning model, and make predictions.</p><p style=\"font-size: 14px;\">This post is based off of the material we presented at our “Data Science for Telecom” tutorial at Strata + Hadoop World Singapore 2015.<br/></p><p style=\"font-size: 14px;\"><span style=\"font-size: 24px;\"></span></p><h2>Data</h2><p></p><p style=\"font-size: 14px;\">We’ll fit our model to a churn dataset provided by the UC Irvine machine-learning repository hosted by SGI. In this dataset, each record contains information corresponding to a single subscriber, as well as whether that subscriber went on to stop using the service.<br/></p><p style=\"font-size: 14px;\"><span style=\"font-size: 24px;\"></span></p><h2>Goal</h2><p></p><p style=\"font-size: 14px;\"></p><p>We’ll fit a machine-learning model that can predict which customers of a telecommunications company are likely to stop using their service. Churn prediction, is one of the most common applications of machine learning in the telecommunications industry, as well as many other subscriptions-based industries.</p><p><br/></p><h2>Workflow</h2><p style=\"font-size: 14px;\"><span style=\"font-size: 24px;\"></span></p><h3>Load and understand the data</h3><p style=\"font-size: 14px;\">We begin by loading our data, which is stored in Comma-Separated Value (CSV) format. For that, we use the CSV node from SparkFlows, which creates a Spark DataFrame.</p><p style=\"font-size: 14px;\"><span style=\"font-size: 24px;\">Data description</span></p><!--EndFragment--><div>state: discrete.</div><p>account length: continuous.</p><p>area code: continuous.</p><p>phone number: discrete.</p><p>international plan: discrete.</p><p>voice mail plan: discrete.</p><p>number vmail messages: continuous.</p><p>total day minutes: continuous.</p><p>total day calls: continuous.</p><p>total day charge: continuous.</p><p>total eve minutes: continuous.</p><p>total eve calls: continuous.</p><p>total eve charge: continuous.</p><p>total night minutes: continuous.</p><p>total night calls: continuous.</p><p>total night charge: continuous.</p><p>total intl minutes: continuous.</p><p>total intl calls: continuous.</p><p>total intl charge: continuous.</p><p>number customer service calls: continuous.</p><p>churned</p><p><br/>The last field, “churned”, a categorical variable that can take the values “true” or “false”, is the label we would like to predict. The rest of the fields are fair game for use in creating independent variables, which are used in combination with a model to generate predictions.<br/><span style=\"font-size: 24px;\"><br/></span></p><p><span style=\"font-size: 24px;\"></span></p><h3>Data Analysis</h3><p></p><p>           SUMMARY STATISTICS:<br/><br/>                  By using Summary Node on all numeric columns.(Distribution of data)<br/><br/>         CORRELATIONS:<br/><br/>                 We can also perform our own statistical analysis using Correlation Node<br/><br/>                 It's obvious that there are several highly correlated fields, ie Total day minutes and Total day charge. Such                                  correlated data won't be very beneficial for our model training runs, so we're going to remove them. <br/>                 We'll do so by dropping one column of each pair of correlated fields, along with the State and Area code columns.<br/><br/>                 While we're in the process of manipulating the data sets, let's transform the categorical data into numeric as                            required by the machine learning routines, using StringIndexer Node.</p><p><br/></p><h3><span id=\"selectionBoundary_1495264031052_13005988501422072\" class=\"rangySelectionBoundary\">&#65279;</span>Feature extraction and indexer</h3><p><br/>Feature extraction on the raw data to transform it into a set of feature vectors and labels. <br/>A feature vector is an array of floating point values representing the independent variables our model can use to make a prediction.<br/>A label is a single floating point value representing the dependent variable that our machine learning algorithm is trying to predict. <br/><br/>Use StringIndexer Node:<br/>    In binary classification problems such as ours, we use 0.0 and 1.0 to represent the two possible predictions. In our case, 0.0 means “will not churn” and 1.0 means “will churn.”<br/><br/>    Feature extraction refers to a wide set of possible transformations we might care to conduct produce feature vectors and labels from the input data. In our case, like to take categorical variables that are represented in the input data as strings, like intl_plan, and index them to turn them into numbers.<br/><br/><span id=\"selectionBoundary_1495264052270_03773590190383169\" class=\"rangySelectionBoundary\">&#65279;</span><br/></p><h3>Feature assembler</h3><p><br/>Assemble selected subset of the columns into a feature vector.<br/><br/></p><h3>Split data into training and test sets</h3><p><span id=\"selectionBoundary_1495264089719_05476087913779826\" class=\"rangySelectionBoundary\">&#65279;</span><br/>Our final data preparation step will split our dataset into separate training and test sets. We can train and tune our model as much as we like on the training set, as long as we do not look at the test set. After we have a good model (based on the training set), we can validate it on the held-out test set in order to know with high confidence our well our model will make predictions on future (unseen) data.<br/><br/></p><h3>Validating the Model</h3><p><br/>A random predictor that labels a customer as churned half the time and not churned the other half would have a ROC that was a straight diagonal line. This line cuts the unit square into two equally-sized triangles, so the area under the curve is 0.5. An AUROC value of 0.5 would mean that your predictor was no better as discriminating between the two classes than random guessing. The closer the value is to 1.0, the better its predictions are. A value below 0.5 indicates that we could actually make our model produce better predictions by reversing the answer it gives us.<br/><br/>Sparkflows also makes computing the AUROC exceedingly easy by using Evaluator Nodes. If we were to compute the ROC curve based on all of our data, our classification evaluation metrics would be overly optimistic because we would be evaluating a model with the same data we trained on. We perform model evaluation only on our test set to avoid overly optimistic model evaluation metrics (like AUROC) as well as to help us avoid overfitting.<br/></p>",
          "widget": "textarea_rich",
          "title": "Comment",
          "description": "Comments for Documentation",
          "required": false,
          "display": false
        }
      ]
    }
  ],
  "edges": [
    {
      "source": "2",
      "target": "3",
      "id": 1
    },
    {
      "source": "3",
      "target": "5",
      "id": 2
    },
    {
      "source": "5",
      "target": "6",
      "id": 3
    },
    {
      "source": "6",
      "target": "9",
      "id": 4
    },
    {
      "source": "5",
      "target": "9",
      "id": 5
    },
    {
      "source": "9",
      "target": "10",
      "id": 6
    },
    {
      "source": "12",
      "target": "2",
      "id": 7
    },
    {
      "source": "12",
      "target": "11",
      "id": 8
    },
    {
      "source": "12",
      "target": "13",
      "id": 9
    }
  ]
}
