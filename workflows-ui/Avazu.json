{
  "name": "Avazu",
  "category": "Machine Learning",
  "description": "-",
  "nodes": [
    {
      "id": "1",
      "name": "DatasetStructured",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetStructured",
      "x": "60.9858px",
      "y": "43.9943px",
      "fields": [
        {
          "name": "dataset",
          "value": "7fff0810-eb50-4b7e-8c9a-a55dcc2578f3",
          "widget": "dataset",
          "title": "Dataset",
          "description": "Selected Dataset",
          "required": false
        }
      ]
    },
    {
      "id": "2",
      "name": "ConcatColumns",
      "description": "This node creates a new DataFrame by concatenating the input columns",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeConcatColumns",
      "x": "52.9858px",
      "y": "186.989px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"site_id\",\"app_id\"]",
          "widget": "variables",
          "title": "Columns",
          "description": "Columns to be concatenated",
          "required": false
        },
        {
          "name": "outputCol",
          "value": "site_app_id",
          "widget": "textfield",
          "title": "Concatenated Column Name",
          "description": "Column name for the concatenated columns",
          "required": false
        },
        {
          "name": "sep",
          "value": "|",
          "widget": "textfield",
          "title": "Separator",
          "description": "Separator to be used when concatenating the columns",
          "required": false
        }
      ]
    },
    {
      "id": "3",
      "name": "PrintNRows",
      "description": "Prints the specified number of records in the DataFrame",
      "type": "transform",
      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",
      "x": "62.983px",
      "y": "365.974px",
      "fields": [
        {
          "name": "n",
          "value": "3",
          "widget": "textfield",
          "title": "Num Rows to Print",
          "required": false
        }
      ]
    },
    {
      "id": "4",
      "name": "StringIndexer",
      "description": "StringIndexer encodes a string column of labels to a column of label indices",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeStringIndexer",
      "x": "278.969px",
      "y": "83.9489px",
      "fields": [
        {
          "name": "handleInvalid",
          "value": "error",
          "widget": "array",
          "title": "Handle Invalid",
          "description": "Invalid entries to be skipped or thrown error",
          "optionsMap": {
            "skip": "skip",
            "error": "error"
          },
          "optionsArray": [
            "skip",
            "error"
          ],
          "required": false
        },
        {
          "name": "inputCols",
          "value": "[\"id\",\"click\",\"hour\",\"C1\",\"banner_pos\",\"site_id\",\"site_domain\",\"site_category\",\"app_id\",\"app_domain\",\"app_category\",\"device_id\",\"device_ip\",\"device_model\",\"device_type\",\"device_conn_type\",\"col16\",\"col17\",\"col18\",\"col19\",\"col20\",\"col21\",\"col22\",\"col23\",\"site_app_id\"]",
          "widget": "variables_map",
          "title": "Input Columns",
          "description": "Column containing labels",
          "required": false
        },
        {
          "name": "outputCols",
          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"site_app_id_index\"]",
          "widget": "variables_map_edit",
          "title": "Output Columns",
          "description": "Output  columns",
          "required": false
        }
      ]
    },
    {
      "id": "5",
      "name": "OneHotEncoder",
      "description": "Maps a column of label indices to a column of binary vectors, with at most a single one-value",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeOneHotEncoder",
      "x": "369.977px",
      "y": "270.957px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"id\",\"click\",\"hour\",\"C1\",\"banner_pos\",\"site_id\",\"site_domain\",\"site_category\",\"app_id\",\"app_domain\",\"app_category\",\"device_id\",\"device_ip\",\"device_model\",\"device_type\",\"device_conn_type\",\"col16\",\"col17\",\"col18\",\"col19\",\"col20\",\"col21\",\"col22\",\"col23\",\"site_app_id\",\"site_app_id_index\"]",
          "widget": "variables_map",
          "title": "Input Columns",
          "description": "Input columns for encoding",
          "required": false
        },
        {
          "name": "outputCols",
          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"site_app_id_nohe\"]",
          "widget": "variables_map_edit",
          "title": "Output Columns",
          "description": "Output columns",
          "required": false
        }
      ]
    },
    {
      "id": "6",
      "name": "StringIndexer",
      "description": "StringIndexer encodes a string column of labels to a column of label indices",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeStringIndexer",
      "x": "260.986px",
      "y": "414.955px",
      "fields": [
        {
          "name": "handleInvalid",
          "value": "error",
          "widget": "array",
          "title": "Handle Invalid",
          "description": "Invalid entries to be skipped or thrown error",
          "optionsMap": {
            "skip": "skip",
            "error": "error"
          },
          "optionsArray": [
            "skip",
            "error"
          ],
          "required": false
        },
        {
          "name": "inputCols",
          "value": "[\"id\",\"click\",\"hour\",\"C1\",\"banner_pos\",\"site_id\",\"site_domain\",\"site_category\",\"app_id\",\"app_domain\",\"app_category\",\"device_id\",\"device_ip\",\"device_model\",\"device_type\",\"device_conn_type\",\"col16\",\"col17\",\"col18\",\"col19\",\"col20\",\"col21\",\"col22\",\"col23\",\"site_app_id\",\"site_app_id_index\",\"site_app_id_nohe\"]",
          "widget": "variables_map",
          "title": "Input Columns",
          "description": "Column containing labels",
          "required": false
        },
        {
          "name": "outputCols",
          "value": "[\"\",\"label\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",
          "widget": "variables_map_edit",
          "title": "Output Columns",
          "description": "Output  columns",
          "required": false
        }
      ]
    },
    {
      "id": "7",
      "name": "VectorAssembler",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeVectorAssembler",
      "x": "480.963px",
      "y": "484.952px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"hour\",\"C1\",\"banner_pos\",\"device_type\",\"device_conn_type\",\"col16\",\"col17\",\"col18\",\"col19\",\"col20\",\"col21\",\"col22\",\"col23\",\"site_app_id_nohe\"]",
          "widget": "variables",
          "title": "Input Columns",
          "description": "Input column of type - all numeric, boolean and vector",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "vectorudt"
          ],
          "required": false
        },
        {
          "name": "outputCol",
          "value": "features",
          "widget": "textfield",
          "title": "Output Column",
          "description": "Output column name",
          "required": false
        }
      ]
    },
    {
      "id": "8",
      "name": "VectorIndexer",
      "description": "Vector Indexer indexes categorical features inside of a Vector. It decides which features are categorical and converts them to category indices. The decision is based on the number of distinct values of a feature.",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeVectorIndexer",
      "x": "569.977px",
      "y": "330.955px",
      "fields": [
        {
          "name": "inputCol",
          "value": "features",
          "widget": "variable",
          "title": "Input Column",
          "description": "The Input column name",
          "datatypes": [
            "vectorudt"
          ],
          "required": false
        },
        {
          "name": "outputCol",
          "value": "features_index_vec",
          "widget": "textfield",
          "title": "Output Column",
          "description": "Output column name",
          "datatypes": [
            "vectorudt"
          ],
          "required": false
        },
        {
          "name": "maxCategories",
          "value": "10",
          "widget": "textfield",
          "title": "Maximum Categories",
          "description": "Threshold for the number of values a categorical feature can take. If a feature is found to have > maxCategories values, then it is declared continuous. Must be >= 2",
          "datatypes": [
            "integer"
          ],
          "required": false
        }
      ]
    },
    {
      "id": "9",
      "name": "Split",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeSplit",
      "x": "617.991px",
      "y": "189.986px",
      "fields": [
        {
          "name": "fraction1",
          "value": ".8",
          "widget": "textfield",
          "title": "Fraction 1",
          "required": false
        }
      ]
    },
    {
      "id": "10",
      "name": "GBTClassifier",
      "description": "Gradient-Boosted Trees (GBTs) is a learning algorithm for classification. It supports binary labels, as well as both continuous and categorical features. Note: Multiclass labels are not currently supported.",
      "type": "ml-estimator",
      "nodeClass": "fire.nodes.ml.NodeGBTClassifier",
      "x": "503.991px",
      "y": "23.9971px",
      "fields": [
        {
          "name": "featuresCol",
          "value": "features",
          "widget": "variable",
          "title": "Features Column",
          "description": "Features column of type vectorUDT for model fitting",
          "datatypes": [
            "vectorudt"
          ],
          "required": false
        },
        {
          "name": "labelCol",
          "value": "label",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "predictionCol",
          "widget": "textfield",
          "title": "Predictor Columns",
          "description": "The prediction column created during model scoring.",
          "required": false
        },
        {
          "name": "impurity",
          "value": "gini",
          "widget": "array",
          "title": "Impurity",
          "description": "The Criterion used for information gain calculation",
          "optionsArray": [
            "gini",
            "entropy"
          ],
          "required": false
        },
        {
          "name": "lossType",
          "value": "logistic",
          "widget": "array",
          "title": "Loss Function",
          "description": "The Loss function which GBT tries to minimize",
          "optionsArray": [
            "logistic"
          ],
          "required": false
        },
        {
          "name": "maxBins",
          "value": "32",
          "widget": "textfield",
          "title": "Max Bins",
          "description": "The maximum number of bins used for discretizing continuous features.Must be >= 2 and >= number of categories in any categorical feature.",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "maxDepth",
          "value": "5",
          "widget": "textfield",
          "title": "Max Depth",
          "description": "The Maximum depth of a tree",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "maxIter",
          "value": "20",
          "widget": "textfield",
          "title": "Max Iterations",
          "description": "The maximum number of iterations(>=0)(a.k.a numtrees)",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "minInfoGain",
          "value": "-1",
          "widget": "textfield",
          "title": "Min Information Gain",
          "description": "The Minimum information gain for a split to be considered at a tree node",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "minInstancesPerNode",
          "value": "1",
          "widget": "textfield",
          "title": "Min Instances Per Node",
          "description": "The Minimum number of instances each child must have after split",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "subsamplingRate",
          "value": "1.0",
          "widget": "textfield",
          "title": "Subsampling Rate",
          "description": "The fraction of the training data used for learning each decision tree.",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "seed",
          "value": "-1",
          "widget": "textfield",
          "title": "Seed",
          "description": "The random seed",
          "datatypes": [
            "long"
          ],
          "required": false
        },
        {
          "name": "stepSize",
          "value": "0.1",
          "widget": "textfield",
          "title": "Step Size",
          "description": "Step size (a.k.a. learning rate), The step size to be used for each iteration of optimization.",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "cacheNodeIds",
          "value": "false",
          "widget": "array",
          "title": "Cache Node Ids",
          "description": "The caching nodes IDs. Can speed up training of deeper trees.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false
        },
        {
          "name": "checkpointInterval",
          "value": "10",
          "widget": "textfield",
          "title": "Checkpoint Interval",
          "description": "The checkpoint interval. E.g. 10 means that the cache will get checkpointed every 10 iterations.Set checkpoint interval (>= 1) or disable checkpoint (-1)",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "maxMemoryInMB",
          "value": "256",
          "widget": "textfield",
          "title": "Max memory",
          "description": "Maximum memory in MB allocated to histogram aggregation.",
          "datatypes": [
            "integer"
          ],
          "required": false
        }
      ]
    },
    {
      "id": "11",
      "name": "Predict",
      "type": "ml-predict",
      "nodeClass": "fire.nodes.ml.NodePredict",
      "x": "844.986px",
      "y": "136.983px",
      "fields": []
    },
    {
      "id": "12",
      "name": "MulticlassClassificationEvaluator",
      "description": "Evaluator for multiclass classification, which expects two input columns: score and label.",
      "type": "ml-evaluator",
      "nodeClass": "fire.nodes.ml.NodeMulticlassClassificationEvaluator",
      "x": "814.977px",
      "y": "330.991px",
      "fields": [
        {
          "name": "labelCol",
          "value": "label",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting.",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "predictionCol",
          "value": "",
          "widget": "variable",
          "title": "PredictionCol Column",
          "description": "The prediction column.",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "metricName",
          "value": "precision",
          "widget": "array",
          "title": "Metric Name",
          "description": "The metric used in evaluation.",
          "optionsArray": [
            "f1",
            "precision",
            "recall",
            "weightedPrecision",
            "weightedRecall"
          ],
          "required": false
        }
      ]
    }
  ],
  "edges": [
    {
      "source": "1",
      "target": "2",
      "id": 1
    },
    {
      "source": "2",
      "target": "3",
      "id": 2
    },
    {
      "source": "3",
      "target": "4",
      "id": 3
    },
    {
      "source": "4",
      "target": "5",
      "id": 4
    },
    {
      "source": "5",
      "target": "6",
      "id": 5
    },
    {
      "source": "6",
      "target": "7",
      "id": 6
    },
    {
      "source": "7",
      "target": "8",
      "id": 7
    },
    {
      "source": "8",
      "target": "9",
      "id": 8
    },
    {
      "source": "9",
      "target": "10",
      "id": 9
    },
    {
      "source": "10",
      "target": "11",
      "id": 10
    },
    {
      "source": "9",
      "target": "11",
      "id": 11
    },
    {
      "source": "11",
      "target": "12",
      "id": 12
    }
  ]
}