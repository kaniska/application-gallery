{
  "name": "Jetrail_linerModel",
  "category": "Machine Learning",
  "description": "Jetrail Forecast - Linear model",
  "nodes": [
    {
      "id": "1",
      "name": "DatasetStructured",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetStructured",
      "x": "38.4844px",
      "y": "39.125px",
      "fields": [
        {
          "name": "dataset",
          "value": "735ee5eb-b634-42f2-8b4e-386883be019f",
          "widget": "dataset",
          "title": "Dataset",
          "description": "Selected Dataset",
          "required": false,
          "display": true
        }
      ]
    },
    {
      "id": "2",
      "name": "DateTimeFieldExtract",
      "description": "creates a new DataFrame by extracting Date and Time fields.",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeDateTimeFieldExtract",
      "x": "299.234px",
      "y": "40.8594px",
      "fields": [
        {
          "name": "inputCol",
          "value": "Datetime",
          "widget": "variable",
          "title": "Column",
          "description": "The input column name",
          "datatypes": [
            "timestamp"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractYear",
          "value": "true",
          "widget": "array",
          "title": "Extract Year",
          "description": "Extract Year",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractMonth",
          "value": "true",
          "widget": "array",
          "title": "Extract Month",
          "description": "Extract Month",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractDayOfMonth",
          "value": "true",
          "widget": "array",
          "title": "Extract Day of Month",
          "description": "Extract Day of Month",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractHour",
          "value": "true",
          "widget": "array",
          "title": "Extract Hour",
          "description": "Extract Hour",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractMinute",
          "value": "false",
          "widget": "array",
          "title": "Extract Minute",
          "description": "Extract Minute",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractSecond",
          "value": "false",
          "widget": "array",
          "title": "Extract Second",
          "description": "Extract Second",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "3",
      "name": "SQL",
      "description": "This node runs the given SQL on the incoming DataFrame",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeSQL",
      "x": "40.4961px",
      "y": "231.105px",
      "fields": [
        {
          "name": "tempTable",
          "value": "fire_temp_table",
          "widget": "textfield",
          "title": "Temp Table",
          "description": "Temp Table Name to be used",
          "required": false,
          "display": false
        },
        {
          "name": "sql",
          "value": "select Datetime, Count, Datetime_year, Datetime_month, Datetime_dayofmonth, Datetime_hour, cast(from_unixtime(unix_timestamp(Datetime,'dd-MM-yyyy'),'u') as int) as day_of_week from fire_temp_table",
          "widget": "textarea_medium",
          "title": "SQL",
          "description": "SQL to be run",
          "required": false,
          "display": false
        },
        {
          "name": "outputColNames",
          "value": "[\"Datetime\",\"Count\",\"Datetime_year\",\"Datetime_month\",\"Datetime_dayofmonth\",\"Datetime_hour\",\"day_of_week\"]",
          "widget": "schema_col_names",
          "title": "Output Column Names",
          "description": "Name of the Output Columns",
          "required": false,
          "display": false
        },
        {
          "name": "outputColTypes",
          "value": "[\"TIMESTAMP\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\"]",
          "widget": "schema_col_types",
          "title": "Output Column Types",
          "description": "Data Type of the Output Columns",
          "required": false,
          "display": false
        },
        {
          "name": "outputColFormats",
          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\"]",
          "widget": "schema_col_formats",
          "title": "Output Column Formats",
          "description": "Format of the Output Columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "6",
      "name": "CastColumnType",
      "description": "This node creates a new DataFrame by casting input columns with a new data type",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeCastColumnType",
      "x": "260.48px",
      "y": "255.117px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"Count\",\"Datetime_year\",\"Datetime_month\",\"Datetime_dayofmonth\",\"Datetime_hour\",\"day_of_week\"]",
          "widget": "variables",
          "title": "Columns",
          "description": "Columns to be cast to new data type",
          "required": false,
          "display": false
        },
        {
          "name": "outputColType",
          "value": "DOUBLE",
          "widget": "array",
          "title": "New Data Type",
          "description": "New data type(INTEGER, DOUBLE, STRING, LONG, SHORT)",
          "optionsArray": [
            "BOOLEAN",
            "BYTE",
            "DATE",
            "DOUBLE",
            "FLOAT",
            "INTEGER",
            "LONG",
            "SHORT",
            "STRING",
            "TIMESTAMP"
          ],
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "8",
      "name": "VectorAssembler",
      "description": "Merges multiple columns into a vector column",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeVectorAssembler",
      "x": "958.953px",
      "y": "44.5977px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"Datetime_month\",\"Datetime_dayofmonth\",\"datetime_hour_index_encode\",\"day_of_week_index_encode\"]",
          "widget": "variables",
          "title": "Input Columns",
          "description": "Input column of type - all numeric, boolean and vector",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "vectorudt"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "outputCol",
          "value": "feature_vector",
          "widget": "textfield",
          "title": "Output Column",
          "description": "Output column name",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "14",
      "name": "OneHotEncoder",
      "description": "Maps a column of label indices to a column of binary vectors, with at most a single one-value",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeOneHotEncoder",
      "x": "680.238px",
      "y": "38.8828px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"Datetime\",\"Count\",\"Datetime_year\",\"Datetime_month\",\"Datetime_dayofmonth\",\"Datetime_hour\",\"day_of_week\",\"datetime_hour_index\",\"day_of_week_index\"]",
          "widget": "variables_map",
          "title": "Input Columns",
          "description": "Input columns for encoding",
          "required": false,
          "display": false
        },
        {
          "name": "outputCols",
          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"datetime_hour_index_encode\",\"day_of_week_index_encode\"]",
          "widget": "variables_map_edit",
          "title": "Output Columns",
          "description": "Output columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "15",
      "name": "StringIndexer",
      "description": "StringIndexer encodes a string column of labels to a column of label indices",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeStringIndexer",
      "x": "541.973px",
      "y": "184.605px",
      "fields": [
        {
          "name": "handleInvalid",
          "value": "error",
          "widget": "array",
          "title": "Handle Invalid",
          "description": "Invalid entries to be skipped or thrown error",
          "optionsArray": [
            "skip",
            "error"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "inputCols",
          "value": "[\"Datetime\",\"Count\",\"Datetime_year\",\"Datetime_month\",\"Datetime_dayofmonth\",\"Datetime_hour\",\"day_of_week\"]",
          "widget": "variables_map",
          "title": "Input Columns",
          "description": "Column containing labels",
          "required": false,
          "display": false
        },
        {
          "name": "outputCols",
          "value": "[\"\",\"\",\"\",\"\",\"\",\"datetime_hour_index\",\"day_of_week_index\"]",
          "widget": "variables_map_edit",
          "title": "Output Columns",
          "description": "Output  columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "17",
      "name": "LinearRegression",
      "description": "",
      "type": "ml-estimator",
      "nodeClass": "fire.nodes.ml.NodeLinearRegression",
      "x": "789.969px",
      "y": "167.594px",
      "fields": [
        {
          "name": "featuresCol",
          "value": "feature_vector",
          "widget": "variable",
          "title": "Features Column",
          "description": "Features column of type vectorUDT for model fitting",
          "datatypes": [
            "vectorudt"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "labelCol",
          "value": "Count",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "predictionCol",
          "value": "",
          "widget": "textfield",
          "title": "Prediction Column",
          "description": "The prediction column created during model scoring",
          "required": false,
          "display": false
        },
        {
          "name": "fitIntercept",
          "value": "true",
          "widget": "array",
          "title": "Fit Intercept",
          "description": "Whether to fit an intercept term",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "maxIter",
          "value": "10",
          "widget": "textfield",
          "title": "Maximum Iterations",
          "description": "Maximum number of iterations (>= 0)",
          "datatypes": [
            "integer"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "regParam",
          "value": "0.0",
          "widget": "textfield",
          "title": "Regularization Param",
          "description": "The regularization parameter",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "elasticNetParam",
          "value": "0.0",
          "widget": "textfield",
          "title": "ElasticNet Param",
          "description": "The ElasticNet mixing parameter. For alpha = 0, the penalty is an L2 penalty. For alpha = 1, it is an L1 penalty",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "solver",
          "value": "auto",
          "widget": "array",
          "title": "Solver",
          "description": "The solver algorithm for optimization",
          "optionsArray": [
            "auto",
            "l-bfgs",
            "normal"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "standardization",
          "value": "true",
          "widget": "array",
          "title": "Standardization",
          "description": "Whether to standardize the training features before fitting the model",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "tol",
          "value": "1E-6",
          "widget": "textfield",
          "title": "Tolerance",
          "description": "The convergence tolerance for iterative algorithms",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "weightCol",
          "value": "",
          "widget": "textfield",
          "title": "Weight Column",
          "description": "If the 'weight column' is not specified, all instances are treated equally with a weight 1.0",
          "required": false,
          "display": false
        },
        {
          "name": "gridSearch",
          "value": "",
          "widget": "tab",
          "title": "Grid Search",
          "required": false,
          "display": false
        },
        {
          "name": "regParamGrid",
          "value": "",
          "widget": "textfield",
          "title": "Regularization Param Grid Search",
          "description": "Regularization Parameters for Grid Search",
          "required": false,
          "display": false
        },
        {
          "name": "elasticNetGrid",
          "value": "",
          "widget": "textfield",
          "title": "ElasticNet Param Grid Search",
          "description": "ElasticNet Parameters for Grid Search",
          "required": false,
          "display": false
        },
        {
          "name": "maxIterGrid",
          "value": "",
          "widget": "textfield",
          "title": "MaxIter Param Grid Search",
          "description": "Maximum iteration Parameters for Grid Search",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "18",
      "name": "Predict",
      "type": "ml-predict",
      "nodeClass": "fire.nodes.ml.NodePredict",
      "x": "852.719px",
      "y": "321.375px",
      "fields": []
    },
    {
      "id": "19",
      "name": "DatasetStructured",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetStructured",
      "x": "24.4766px",
      "y": "663.141px",
      "fields": [
        {
          "name": "dataset",
          "value": "cc1aec58-3c26-4e7f-adab-10e2458ec185",
          "widget": "dataset",
          "title": "Dataset",
          "description": "Selected Dataset",
          "required": false,
          "display": true
        }
      ]
    },
    {
      "id": "20",
      "name": "DateTimeFieldExtract",
      "description": "creates a new DataFrame by extracting Date and Time fields.",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeDateTimeFieldExtract",
      "x": "226.688px",
      "y": "651.344px",
      "fields": [
        {
          "name": "inputCol",
          "value": "Datetime",
          "widget": "variable",
          "title": "Column",
          "description": "The input column name",
          "datatypes": [
            "timestamp"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractYear",
          "value": "true",
          "widget": "array",
          "title": "Extract Year",
          "description": "Extract Year",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractMonth",
          "value": "true",
          "widget": "array",
          "title": "Extract Month",
          "description": "Extract Month",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractDayOfMonth",
          "value": "true",
          "widget": "array",
          "title": "Extract Day of Month",
          "description": "Extract Day of Month",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractHour",
          "value": "true",
          "widget": "array",
          "title": "Extract Hour",
          "description": "Extract Hour",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractMinute",
          "value": "false",
          "widget": "array",
          "title": "Extract Minute",
          "description": "Extract Minute",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "extractSecond",
          "value": "false",
          "widget": "array",
          "title": "Extract Second",
          "description": "Extract Second",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "true",
            "false"
          ],
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "21",
      "name": "SQL",
      "description": "This node runs the given SQL on the incoming DataFrame",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeSQL",
      "x": "48.4453px",
      "y": "475.461px",
      "fields": [
        {
          "name": "tempTable",
          "value": "fire_temp_table",
          "widget": "textfield",
          "title": "Temp Table",
          "description": "Temp Table Name to be used",
          "required": false,
          "display": false
        },
        {
          "name": "sql",
          "value": "select Datetime, Datetime_year, Datetime_month, Datetime_dayofmonth, Datetime_hour, cast(from_unixtime(unix_timestamp(Datetime,'dd-MM-yyyy'),'u') as int) as day_of_week from fire_temp_table",
          "widget": "textarea_medium",
          "title": "SQL",
          "description": "SQL to be run",
          "required": false,
          "display": false
        },
        {
          "name": "outputColNames",
          "value": "[\"Datetime\",\"Datetime_year\",\"Datetime_month\",\"Datetime_dayofmonth\",\"Datetime_hour\",\"day_of_week\"]",
          "widget": "schema_col_names",
          "title": "Output Column Names",
          "description": "Name of the Output Columns",
          "required": false,
          "display": false
        },
        {
          "name": "outputColTypes",
          "value": "[\"TIMESTAMP\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\",\"INTEGER\"]",
          "widget": "schema_col_types",
          "title": "Output Column Types",
          "description": "Data Type of the Output Columns",
          "required": false,
          "display": false
        },
        {
          "name": "outputColFormats",
          "value": "[\"\",\"\",\"\",\"\",\"\",\"\"]",
          "widget": "schema_col_formats",
          "title": "Output Column Formats",
          "description": "Format of the Output Columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "22",
      "name": "CastColumnType",
      "description": "This node creates a new DataFrame by casting input columns with a new data type",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeCastColumnType",
      "x": "246.453px",
      "y": "442.094px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"Datetime_year\",\"Datetime_month\",\"Datetime_dayofmonth\",\"Datetime_hour\",\"day_of_week\"]",
          "widget": "variables",
          "title": "Columns",
          "description": "Columns to be cast to new data type",
          "required": false,
          "display": false
        },
        {
          "name": "outputColType",
          "value": "DOUBLE",
          "widget": "array",
          "title": "New Data Type",
          "description": "New data type(INTEGER, DOUBLE, STRING, LONG, SHORT)",
          "optionsArray": [
            "BOOLEAN",
            "BYTE",
            "DATE",
            "DOUBLE",
            "FLOAT",
            "INTEGER",
            "LONG",
            "SHORT",
            "STRING",
            "TIMESTAMP"
          ],
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "23",
      "name": "StringIndexer",
      "description": "StringIndexer encodes a string column of labels to a column of label indices",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeStringIndexer",
      "x": "505.219px",
      "y": "693.969px",
      "fields": [
        {
          "name": "handleInvalid",
          "value": "error",
          "widget": "array",
          "title": "Handle Invalid",
          "description": "Invalid entries to be skipped or thrown error",
          "optionsArray": [
            "skip",
            "error"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "inputCols",
          "value": "[\"Datetime\",\"Datetime_year\",\"Datetime_month\",\"Datetime_dayofmonth\",\"Datetime_hour\",\"day_of_week\"]",
          "widget": "variables_map",
          "title": "Input Columns",
          "description": "Column containing labels",
          "required": false,
          "display": false
        },
        {
          "name": "outputCols",
          "value": "[\"\",\"\",\"\",\"\",\"datetime_hour_index\",\"day_of_week_index\"]",
          "widget": "variables_map_edit",
          "title": "Output Columns",
          "description": "Output  columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "24",
      "name": "OneHotEncoder",
      "description": "Maps a column of label indices to a column of binary vectors, with at most a single one-value",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeOneHotEncoder",
      "x": "427.438px",
      "y": "354.359px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"Datetime\",\"Datetime_year\",\"Datetime_month\",\"Datetime_dayofmonth\",\"Datetime_hour\",\"day_of_week\",\"datetime_hour_index\",\"day_of_week_index\"]",
          "widget": "variables_map",
          "title": "Input Columns",
          "description": "Input columns for encoding",
          "required": false,
          "display": false
        },
        {
          "name": "outputCols",
          "value": "[\"\",\"\",\"\",\"\",\"\",\"\",\"datetime_hour_index_encode\",\"day_of_week_index_encode\"]",
          "widget": "variables_map_edit",
          "title": "Output Columns",
          "description": "Output columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "25",
      "name": "VectorAssembler",
      "description": "Merges multiple columns into a vector column",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeVectorAssembler",
      "x": "609.469px",
      "y": "583.141px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"Datetime_month\",\"Datetime_dayofmonth\",\"datetime_hour_index_encode\",\"day_of_week_index_encode\"]",
          "widget": "variables",
          "title": "Input Columns",
          "description": "Input column of type - all numeric, boolean and vector",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "vectorudt"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "outputCol",
          "value": "feature_vector",
          "widget": "textfield",
          "title": "Output Column",
          "description": "Output column name",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "26",
      "name": "Split",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeSplit",
      "x": "690.688px",
      "y": "379.359px",
      "fields": [
        {
          "name": "fraction1",
          "value": "1.0",
          "widget": "textfield",
          "title": "Fraction 1",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "30",
      "name": "SQL",
      "description": "This node runs the given SQL on the incoming DataFrame",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeSQL",
      "x": "1020.44px",
      "y": "235.078px",
      "fields": [
        {
          "name": "tempTable",
          "value": "fire_temp_table",
          "widget": "textfield",
          "title": "Temp Table",
          "description": "Temp Table Name to be used",
          "required": false,
          "display": false
        },
        {
          "name": "sql",
          "value": "select Datetime, prediction from fire_temp_table order by Datetime LIMIT 10",
          "widget": "textarea_medium",
          "title": "SQL",
          "description": "SQL to be run",
          "required": false,
          "display": false
        },
        {
          "name": "outputColNames",
          "value": "[\"Datetime\",\"prediction\"]",
          "widget": "schema_col_names",
          "title": "Output Column Names",
          "description": "Name of the Output Columns",
          "required": false,
          "display": false
        },
        {
          "name": "outputColTypes",
          "value": "[\"TIMESTAMP\",\"DOUBLE\"]",
          "widget": "schema_col_types",
          "title": "Output Column Types",
          "description": "Data Type of the Output Columns",
          "required": false,
          "display": false
        },
        {
          "name": "outputColFormats",
          "value": "[\"\",\"\"]",
          "widget": "schema_col_formats",
          "title": "Output Column Formats",
          "description": "Format of the Output Columns",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "31",
      "name": "SaveParquet",
      "description": "Saves the DataFrame into the specified location in Parquet Format",
      "type": "transform",
      "nodeClass": "fire.nodes.save.NodeSaveParquet",
      "x": "1028.7px",
      "y": "468.359px",
      "fields": [
        {
          "name": "path",
          "value": "data/jetrailLinearModelOutput",
          "widget": "textfield",
          "title": "Path",
          "description": "Path where to save the Parquet files",
          "required": false,
          "display": false
        },
        {
          "name": "saveMode",
          "value": "Append",
          "widget": "array",
          "title": "Save Mode",
          "description": "Whether to Append, Overwrite or Error if the path Exists",
          "optionsArray": [
            "Append",
            "Overwrite",
            "ErrorIfExists",
            "Ignore"
          ],
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "32",
      "name": "Documentation",
      "description": "Allows documentation of the workflows",
      "type": "doc",
      "nodeClass": "fire.nodes.doc.NodeDocLarge",
      "x": "50px",
      "y": "342.656px",
      "fields": [
        {
          "name": "comment",
          "value": "<p><b></b></p><p><b>Description</b></p><p>:</p><p><br/></p><p><br/></p><p>This time you are helping out Unicorn Investors with your data hacking skills. They are considering making an investment in a new form of transportation - JetRail. JetRail uses Jet propulsion technology to run rails and move people at a high speed! While JetRail has mastered the technology and they hold the patent for their product, the investment would only make sense, if they can get more than 1 Million monthly users with in next 18 months.</p><p><br/></p><p><br/></p> <p><br/></p><p>You need to help Unicorn ventures with the decision. They usually invest in B2C start-ups less than 4 years old looking for pre-series A funding. In order to help Unicorn Ventures in their decision, you need to forecast the traffic on JetRail for the next 7 months. You are provided with traffic data of JetRail since inception in the test file.</p><p><br/></p><p><br/></p><p>Evaluation Metric:</p><p><br/></p><p>Root Mean Squre Error (RMSE) is the evaluation metric for this contest</p><p><br/></p><p>Note: Public and private split is 20:80 where first 44 days in public and next 169 days in private</p><p><br/></p><p>Data</p><p><br/></p><p>Please make sure that the datetime column in your submission file is in the following format : </p><p><br/></p><p>26-09-2014 00:00( DD-MM-YYYY HH:MM )</p><p><br/></p><p><br/></p><p><b>Workflow<br/></b></p><p><br/></p><p>Load and understand the data</p><p><br/></p><p>We begin by loading our data, which is stored in Comma-Separated Value (CSV) format. For that, we use the CSV node from SparkFlows, which creates a Spark DataFrame.</p><p><br/></p><p><br/></p><p><b>Data description<br/></b></p><p><br/></p><p>Datetime: TimeStamp</p><p><br/></p><p>Count: Continues </p><p><br/></p><p><br/></p><p>Feature extraction and indexer</p><p><br/></p><p>  1.DateTimeFieldExtract: Extract year, month, Day of month, hour from Datetime field.</p><p><br/></p><p>  2.SQL: Extract the day of week from Datetime field i.e (from_unixtime(unix_timestamp(Datetime,'dd-MM-yyyy'),'u') as int).</p><p><br/></p><p>  3.Cast: Convert the integer values to double for ML nodes.</p><p><br/></p><p>  4.Indexer &amp; Encoder: Index the hour and dayOfWeek field &amp; Encode them for LogisticRegression.</p><p><br/></p><p>  5.Assembler:Assemble selected subset of the columns into a feature vector.</p><p><br/></p><p>  6. Model: Build the LinearRegression Model using feature vector with count as label data.</p><p><br/></p>  <p><br/></p><p>  Fallow the first 5 steps on test data and score test data with trained model in step 6.</p><p><br/></p>  <p><br/></p><p>  7.Select the required fields by using SQL node and save the predictions in Parquet file.  </p><p><br/></p>  <p style=\"font-size: 14px;\"><br/></p>",
          "widget": "textarea_rich",
          "title": "Comment",
          "description": "Comments for Documentation",
          "required": false,
          "display": false
        }
      ]
    },
    {
      "id": "33",
      "name": "RegressionEvaluator",
      "description": "Evaluator for regression, which expects two input columns: prediction and label.",
      "type": "ml-evaluator",
      "nodeClass": "fire.nodes.ml.NodeRegressionEvaluator",
      "x": "834px",
      "y": "622px",
      "fields": [
        {
          "name": "labelCol",
          "value": "Count",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "predictionCol",
          "value": "prediction",
          "widget": "variable",
          "title": "PredictionCol Column",
          "description": "The prediction column.",
          "datatypes": [
            "double"
          ],
          "required": false,
          "display": false
        },
        {
          "name": "metricName",
          "value": "rmse",
          "widget": "array",
          "title": "Metric Name",
          "description": "The metric used in evaluation.",
          "optionsArray": [
            "rmse",
            "mse",
            "r2",
            "mae"
          ],
          "required": false,
          "display": false
        }
      ]
    }
  ],
  "edges": [
    {
      "source": "1",
      "target": "2",
      "id": 1
    },
    {
      "source": "2",
      "target": "3",
      "id": 2
    },
    {
      "source": "3",
      "target": "6",
      "id": 3
    },
    {
      "source": "14",
      "target": "8",
      "id": 4
    },
    {
      "source": "6",
      "target": "15",
      "id": 5
    },
    {
      "source": "15",
      "target": "14",
      "id": 6
    },
    {
      "source": "8",
      "target": "17",
      "id": 7
    },
    {
      "source": "17",
      "target": "18",
      "id": 8
    },
    {
      "source": "19",
      "target": "20",
      "id": 9
    },
    {
      "source": "20",
      "target": "21",
      "id": 10
    },
    {
      "source": "21",
      "target": "22",
      "id": 11
    },
    {
      "source": "22",
      "target": "23",
      "id": 12
    },
    {
      "source": "23",
      "target": "24",
      "id": 13
    },
    {
      "source": "24",
      "target": "25",
      "id": 14
    },
    {
      "source": "25",
      "target": "26",
      "id": 15
    },
    {
      "source": "26",
      "target": "18",
      "id": 16
    },
    {
      "source": "18",
      "target": "30",
      "id": 17
    },
    {
      "source": "30",
      "target": "31",
      "id": 18
    },
    {
      "source": "18",
      "target": "33",
      "id": 19
    }
  ]
}