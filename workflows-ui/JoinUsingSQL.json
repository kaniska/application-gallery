{
  "name": "Joins Using SQL",
  "category": "ETL",
  "description": "Left and Right Joins",
  "nodes": [
    {
      "id": "1",
      "name": "DatasetStructured",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetStructured",
      "x": "118px",
      "y": "245.656px",
      "fields": [
        {
          "name": "dataset",
          "value": "a4ca862a-4127-449d-a7e0-c2fffd69fc14",
          "widget": "dataset",
          "title": "Dataset",
          "description": "Selected Dataset",
          "required": false
        }
      ]
    },
    {
      "id": "2",
      "name": "DatasetStructured",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetStructured",
      "x": "107px",
      "y": "556.656px",
      "fields": [
        {
          "name": "dataset",
          "value": "a4ca862a-4127-449d-a7e0-c2fffd69fc14",
          "widget": "dataset",
          "title": "Dataset",
          "description": "Selected Dataset",
          "required": false
        }
      ]
    },
    {
      "id": "3",
      "name": "Join Using SQL",
      "description": "This node registers the incoming DataFrames as temporary tables and executes the SQL provided",
      "type": "join",
      "nodeClass": "fire.nodes.etl.NodeJoinUsingSQL",
      "x": "493px",
      "y": "327.656px",
      "fields": [
        {
          "name": "tempTable1",
          "value": "fire_temp_table1",
          "widget": "textfield",
          "title": "Temp Table1",
          "description": "Temp Table Name to be used",
          "required": false
        },
        {
          "name": "tempTable2",
          "value": "fire_temp_table2",
          "widget": "textfield",
          "title": "Temp Table2",
          "description": "Temp Table Name to be used",
          "required": false
        },
        {
          "name": "sql",
          "value": "select  a.c1, a.c2, b.c3, b.c4 from fire_temp_table1 a RIGHT OUTER JOIN fire_temp_table2 b ON(a.c1=b.c1 and a.c2=b.c2)",
          "widget": "textarea_large",
          "title": "SQL",
          "description": "SQL to be run",
          "required": false
        },
        {
          "name": "outputColNames",
          "value": "[\"c1\",\"c2\",\"c3\",\"c4\"]",
          "widget": "schema_col_names",
          "title": "Column Names for the CSV",
          "description": "New Output Columns of the SQL",
          "required": false
        },
        {
          "name": "outputColTypes",
          "value": "[\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\"]",
          "widget": "schema_col_types",
          "title": "Column Types for the CSV",
          "description": "Data Type of the Output Columns",
          "required": false
        },
        {
          "name": "outputColFormats",
          "value": "[\"\",\"\",\"\",\"\"]",
          "widget": "schema_col_formats",
          "title": "Column Formats for the CSV",
          "description": "Format of the Output Columns",
          "required": false
        }
      ]
    },
    {
      "id": "4",
      "name": "Join Using SQL",
      "description": "This node registers the incoming DataFrames as temporary tables and executes the SQL provided",
      "type": "join",
      "nodeClass": "fire.nodes.etl.NodeJoinUsingSQL",
      "x": "488px",
      "y": "492.656px",
      "fields": [
        {
          "name": "tempTable1",
          "value": "fire_temp_table1",
          "widget": "textfield",
          "title": "Temp Table1",
          "description": "Temp Table Name to be used",
          "required": false
        },
        {
          "name": "tempTable2",
          "value": "fire_temp_table2",
          "widget": "textfield",
          "title": "Temp Table2",
          "description": "Temp Table Name to be used",
          "required": false
        },
        {
          "name": "sql",
          "value": "select  a.c1, a.c2, b.c3, b.c4 from fire_temp_table1 a LEFT OUTER JOIN fire_temp_table2 b ON(a.c1=b.c1 and a.c2=b.c2)",
          "widget": "textarea_large",
          "title": "SQL",
          "description": "SQL to be run",
          "required": false
        },
        {
          "name": "outputColNames",
          "value": "[\"c1\",\"c2\",\"c3\",\"c4\"]",
          "widget": "schema_col_names",
          "title": "Column Names for the CSV",
          "description": "New Output Columns of the SQL",
          "required": false
        },
        {
          "name": "outputColTypes",
          "value": "[\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\"]",
          "widget": "schema_col_types",
          "title": "Column Types for the CSV",
          "description": "Data Type of the Output Columns",
          "required": false
        },
        {
          "name": "outputColFormats",
          "value": "[\"\",\"\",\"\",\"\"]",
          "widget": "schema_col_formats",
          "title": "Column Formats for the CSV",
          "description": "Format of the Output Columns",
          "required": false
        }
      ]
    },
    {
      "id": "5",
      "name": "PrintNRows",
      "description": "Prints the specified number of records in the DataFrame",
      "type": "transform",
      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",
      "x": "778px",
      "y": "355.656px",
      "fields": [
        {
          "name": "n",
          "value": "3",
          "widget": "textfield",
          "title": "Num Rows to Print",
          "required": false
        }
      ]
    },
    {
      "id": "6",
      "name": "PrintNRows",
      "description": "Prints the specified number of records in the DataFrame",
      "type": "transform",
      "nodeClass": "fire.nodes.util.NodePrintFirstNRows",
      "x": "785px",
      "y": "466.656px",
      "fields": [
        {
          "name": "n",
          "value": "3",
          "widget": "textfield",
          "title": "Num Rows to Print",
          "required": false
        }
      ]
    }
  ],
  "edges": [
    {
      "source": "1",
      "target": "3",
      "id": 1
    },
    {
      "source": "2",
      "target": "3",
      "id": 2
    },
    {
      "source": "1",
      "target": "4",
      "id": 3
    },
    {
      "source": "2",
      "target": "4",
      "id": 4
    },
    {
      "source": "3",
      "target": "5",
      "id": 5
    },
    {
      "source": "4",
      "target": "6",
      "id": 6
    }
  ]
}