{
  "name": "BikeSharing_Analysis",
  "category": "Machine Learning",
  "description": "BikeSharing Analysis",
  "nodes": [
    {
      "id": "1",
      "name": "DatasetStructured",
      "type": "dataset",
      "nodeClass": "fire.nodes.dataset.NodeDatasetStructured",
      "x": "21px",
      "y": "49.6406px",
      "fields": [
        {
          "name": "dataset",
          "value": "e0775ee4-b0d6-498c-9dcc-957311281642",
          "widget": "dataset",
          "title": "Dataset",
          "description": "Selected Dataset",
          "required": false
        }
      ]
    },
    {
      "id": "2",
      "name": "DateTimeFieldExtract",
      "description": "",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeDateTimeFieldExtract",
      "x": "18px",
      "y": "366.641px",
      "fields": [
        {
          "name": "inputCol",
          "value": "datetime",
          "widget": "variable",
          "title": "Column",
          "description": "",
          "datatypes": [
            "timestamp"
          ],
          "required": false
        },
        {
          "name": "values",
          "value": "year month dayofmonth hour",
          "widget": "textfield",
          "title": "Fields",
          "description": "Enter values to be extracted by space sep(values: year, month, dayofmonth, hour, minute, second)",
          "required": false
        }
      ]
    },
    {
      "id": "3",
      "name": "CastColumnType",
      "description": "This node creates a new DataFrame by casting input columns with input data types",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeCastColumnType",
      "x": "138px",
      "y": "176.641px",
      "fields": [
        {
          "name": "colNames",
          "value": "[\"count\"]",
          "widget": "variables",
          "title": "Columns",
          "description": "Columns to be casted to new data type",
          "required": false
        },
        {
          "name": "outputTypes",
          "value": "double",
          "widget": "textfield",
          "title": "New Data Types",
          "description": "New data types separated by space",
          "required": false
        }
      ]
    },
    {
      "id": "4",
      "name": "VectorAssembler",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeVectorAssembler",
      "x": "255px",
      "y": "59.6406px",
      "fields": [
        {
          "name": "inputCols",
          "value": "[\"season\",\"holiday\",\"workingday\",\"weather\",\"humidity\",\"datetime_year\",\"datetime_month\",\"datetime_dayofmonth\",\"datetime_hour\",\"temp\",\"atemp\",\"windspeed\"]",
          "widget": "variables",
          "title": "Input Columns",
          "description": "Input column of type - all numeric, boolean and vector",
          "datatypes": [
            "integer",
            "long",
            "double",
            "float",
            "vectorudt"
          ],
          "required": false
        },
        {
          "name": "outputCol",
          "value": "feature_vector",
          "widget": "textfield",
          "title": "Output Column",
          "description": "Output column name",
          "required": false
        }
      ]
    },
    {
      "id": "5",
      "name": "VectorIndexer",
      "description": "Vector Indexer indexes categorical features inside of a Vector. It decides which features are categorical and converts them to category indices. The decision is based on the number of distinct values of a feature.",
      "type": "ml-transformer",
      "nodeClass": "fire.nodes.ml.NodeVectorIndexer",
      "x": "273px",
      "y": "366.641px",
      "fields": [
        {
          "name": "inputCol",
          "value": "feature_vector",
          "widget": "variable",
          "title": "Input Column",
          "description": "The Input column name",
          "datatypes": [
            "vectorudt"
          ],
          "required": false
        },
        {
          "name": "outputCol",
          "value": "feature_vector_index",
          "widget": "textfield",
          "title": "Output Column",
          "description": "Output column name",
          "datatypes": [
            "vectorudt"
          ],
          "required": false
        },
        {
          "name": "maxCategories",
          "value": "31",
          "widget": "textfield",
          "title": "Maximum Categories",
          "description": "Threshold for the number of values a categorical feature can take. If a feature is found to have > maxCategories values, then it is declared continuous. Must be >= 2",
          "datatypes": [
            "integer"
          ],
          "required": false
        }
      ]
    },
    {
      "id": "6",
      "name": "Split",
      "type": "transform",
      "nodeClass": "fire.nodes.ml.NodeSplit",
      "x": "379px",
      "y": "219.656px",
      "fields": [
        {
          "name": "fraction1",
          "value": ".8",
          "widget": "textfield",
          "title": "Fraction 1",
          "required": false
        }
      ]
    },
    {
      "id": "7",
      "name": "GBTRegression",
      "description": "It supports both continuous and categorical features.",
      "type": "ml-estimator",
      "nodeClass": "fire.nodes.ml.NodeGBTRegression",
      "x": "504px",
      "y": "68.6563px",
      "fields": [
        {
          "name": "featuresCol",
          "value": "feature_vector_index",
          "widget": "variable",
          "title": "Features Column",
          "description": "Features column of type vectorUDT for model fitting",
          "datatypes": [
            "vectorudt"
          ],
          "required": false
        },
        {
          "name": "labelCol",
          "value": "count",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "predictionCol",
          "value": "",
          "widget": "textfield",
          "title": "Predictor Columns",
          "description": "The prediction column created during model scoring.",
          "required": false
        },
        {
          "name": "impurity",
          "value": "variance",
          "widget": "array",
          "title": "Impurity",
          "description": "The Criterion used for information gain calculation",
          "optionsArray": [
            "variance"
          ],
          "required": false
        },
        {
          "name": "lossType",
          "value": "squared",
          "widget": "array",
          "title": "Loss Function",
          "description": "The Loss function which GBT tries to minimize",
          "optionsArray": [
            "squared",
            "absolute"
          ],
          "required": false
        },
        {
          "name": "maxBins",
          "value": "32",
          "widget": "textfield",
          "title": "Max Bins",
          "description": "The maximum number of bins used for discretizing continuous features.Must be >= 2 and >= number of categories in any categorical feature.",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "maxDepth",
          "value": "5",
          "widget": "textfield",
          "title": "Max Depth",
          "description": "The Maximum depth of a tree",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "maxIter",
          "value": "5",
          "widget": "textfield",
          "title": "Max Iterations",
          "description": "The maximum number of iterations(>=0)(a.k.a numtrees)",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "minInfoGain",
          "value": "0.0",
          "widget": "textfield",
          "title": "Min Information Gain",
          "description": "The Minimum information gain for a split to be considered at a tree node",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "minInstancesPerNode",
          "value": "1",
          "widget": "textfield",
          "title": "Min Instances Per Node",
          "description": "The Minimum number of instances each child must have after split",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "subsamplingRate",
          "value": "1.0",
          "widget": "textfield",
          "title": "Subsampling Rate",
          "description": "The fraction of the training data used for learning each decision tree.",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "seed",
          "value": "",
          "widget": "textfield",
          "title": "Seed",
          "description": "The random seed",
          "datatypes": [
            "long"
          ],
          "required": false
        },
        {
          "name": "stepSize",
          "value": "0.1",
          "widget": "textfield",
          "title": "Step Size",
          "description": "Step size (a.k.a. learning rate), The step size to be used for each iteration of optimization.",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "cacheNodeIds",
          "value": "false",
          "widget": "array",
          "title": "Cache Node Ids",
          "description": "The caching nodes IDs. Can speed up training of deeper trees.",
          "datatypes": [
            "boolean"
          ],
          "optionsArray": [
            "false",
            "true"
          ],
          "required": false
        },
        {
          "name": "checkpointInterval",
          "value": "10",
          "widget": "textfield",
          "title": "Checkpoint Interval",
          "description": "The checkpoint interval. E.g. 10 means that the cache will get checkpointed every 10 iterations.Set checkpoint interval (>= 1) or disable checkpoint (-1)",
          "datatypes": [
            "integer"
          ],
          "required": false
        },
        {
          "name": "maxMemoryInMB",
          "value": "256",
          "widget": "textfield",
          "title": "Max memory",
          "description": "Maximum memory in MB allocated to histogram aggregation.",
          "datatypes": [
            "integer"
          ],
          "required": false
        }
      ]
    },
    {
      "id": "8",
      "name": "Predict",
      "type": "ml-predict",
      "nodeClass": "fire.nodes.ml.NodePredict",
      "x": "722px",
      "y": "214.641px",
      "fields": []
    },
    {
      "id": "9",
      "name": "RegressionEvaluator",
      "description": "Evaluator for regression, which expects two input columns: prediction and label.",
      "type": "ml-evaluator",
      "nodeClass": "fire.nodes.ml.NodeRegressionEvaluator",
      "x": "526px",
      "y": "380.656px",
      "fields": [
        {
          "name": "labelCol",
          "value": "count",
          "widget": "variable",
          "title": "Label Column",
          "description": "The label column for model fitting.",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "predictionCol",
          "value": "prediction",
          "widget": "variable",
          "title": "PredictionCol Column",
          "description": "The prediction column.",
          "datatypes": [
            "double"
          ],
          "required": false
        },
        {
          "name": "metricName",
          "value": "rmse",
          "widget": "array",
          "title": "Metric Name",
          "description": "The metric used in evaluation.",
          "optionsArray": [
            "rmse",
            "mse",
            "r2",
            "mae"
          ],
          "required": false
        }
      ]
    },
    {
      "id": "10",
      "name": "SQL",
      "description": "This node runs the given SQL on the incoming DataFrame",
      "type": "transform",
      "nodeClass": "fire.nodes.etl.NodeSQL",
      "x": "250px",
      "y": "498.656px",
      "fields": [
        {
          "name": "tempTable",
          "value": "fire_temp_table",
          "widget": "textfield",
          "title": "Temp Table",
          "description": "Temp Table Name to be used",
          "required": false
        },
        {
          "name": "sql",
          "value": "select datetime_hour, sum(count) as count from fire_temp_table group by datetime_hour order by datetime_hour",
          "widget": "textarea_large",
          "title": "SQL",
          "description": "SQL to be run",
          "required": false
        },
        {
          "name": "columns",
          "value": "datetime_hour count",
          "widget": "textarea_small",
          "title": "SQL Output Column Names separated by space",
          "description": "New Output Columns of the SQL",
          "required": false
        },
        {
          "name": "columnTypes",
          "value": "int double",
          "widget": "textarea_small",
          "title": "SQL Output Column Types separated by space",
          "description": "Data Type of the Output Columns",
          "required": false
        }
      ]
    },
    {
      "id": "11",
      "name": "GraphValues",
      "type": "transform",
      "nodeClass": "fire.nodes.graph.NodeGraphValues",
      "x": "468px",
      "y": "528.656px",
      "fields": [
        {
          "name": "title",
          "value": "Graph",
          "widget": "textfield",
          "title": "Title",
          "required": false
        },
        {
          "name": "xlabel",
          "value": "X axis",
          "widget": "textfield",
          "title": "X Label",
          "required": false
        },
        {
          "name": "ylabel",
          "value": "Y axis",
          "widget": "textfield",
          "title": "Y Label",
          "required": false
        },
        {
          "name": "graphType",
          "value": "LINECHART",
          "widget": "enum",
          "title": "Chart Type",
          "optionsMap": {
            "LINECHART": "Line Chart",
            "COLUMNCHART": "Side by Side Bar Chart",
            "BARCHART": "Stacked Bar Chart",
            "PIE": "Pie Chart"
          },
          "required": false
        },
        {
          "name": "xCol",
          "value": "datetime_hour",
          "widget": "variable",
          "title": "X Column",
          "required": false
        },
        {
          "name": "yCols",
          "value": "[\"count\"]",
          "widget": "variables",
          "title": "Y Columns",
          "required": false
        }
      ]
    }
  ],
  "edges": [
    {
      "source": "1",
      "target": "2",
      "id": 1
    },
    {
      "source": "2",
      "target": "3",
      "id": 2
    },
    {
      "source": "3",
      "target": "4",
      "id": 3
    },
    {
      "source": "4",
      "target": "5",
      "id": 4
    },
    {
      "source": "5",
      "target": "6",
      "id": 5
    },
    {
      "source": "6",
      "target": "7",
      "id": 6
    },
    {
      "source": "7",
      "target": "8",
      "id": 7
    },
    {
      "source": "6",
      "target": "8",
      "id": 8
    },
    {
      "source": "8",
      "target": "9",
      "id": 9
    },
    {
      "source": "2",
      "target": "10",
      "id": 10
    },
    {
      "source": "10",
      "target": "11",
      "id": 11
    }
  ]
}
